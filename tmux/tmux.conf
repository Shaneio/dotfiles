#!/usr/local/bin/tmux

# ====================
# KEY BINDING
# ====================

# Set prefix to Ctrl-Space
bind-key C-Space send-prefix
unbind-key C-b
set -g prefix C-Space
set -g default-terminal "xterm-256color";

# Quick key for moving back to the previous window (tmux book)
bind-key -r j previous-window
bind-key -r k next-window
bind-key l last-window

# force a reload of the config file
unbind r
bind-key r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display "Reloaded tmux conf"

# set window split
unbind v
unbind h
unbind % #Split vertically
unbind '"' # Split horizontally
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# vim pane selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# pane resize
bind -r Left  resize-pane -L 5
bind -r Down  resize-pane -D 5
bind -r Up    resize-pane -U 5
bind -r Right resize-pane -R 5

# pane movement to window
# bind j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind s command-prompt -p "send pane to:"  "join-pane -t '%%'"

unbind a
bind a choose-tree -Zs

# mouse mode
set -g mouse on

bind m \
    set -g mouse on \; \
    display 'Mouse: ON'

bind M \
    set -g mouse off \; \
    display 'Mouse: OFF'

# Alt j/k key to switch windows
bind -n M-j previous-window
bind -n M-k next-window

# Make a smaller delay so we can perform commands after switching windows
set -sg escape-time 0
set -sg repeat-time 600

# Window title begins by 1 and not 0
set -g base-index 1
set-window-option -g pane-base-index 1
# setw -g pane-base-index 1

# window management
unbind n #DEFAULT KEY: Move to next window
unbind w #DEFAULT KEY: Move to next window

bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# panes
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Renumber windows automatically after removing a window
set-option -g renumber-windows on

# Scrollback lines
set -g history-limit 10000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*.
setw -g aggressive-resize on

# Prevent tmux from renaming the tab when processes change (from tmux book)
# e.g. if you're in a directory which is a git repo and you fire up Pry then
# tmux would first rename the tab to 'java' (for Pry) then 'git' when exiting Pry, then finally back to 'zsh'
# set-option -g allow-rename off

# Tells tmux up front what shell to expect (from tmux book)
# set-option -g default-shell /bin/zsh

#vim key mode
# set-window-option -g mode-keys vi
setw -g mode-keys vi

bind -Tcopy-mode-vi 'v' send -X begin-selection
# copy selected selection with y - if using the mouse `y` need to be used before releasing the mouse button
bind -Tcopy-mode-vi 'y' send -X copy-selection

# Copy tmux copy to clipboard (need xsel - possible to use xclip as well)
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
unbind ]
# Original (meant for linux which uses xsel & xclip of X11 systems)
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Try to add an if statement. Uses uname which returns kernel type, Darwin = Mac, Linux
# Modified for macOS - requires brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind-key p paste-buffer

# nvim compatibility - fix the cursor problem
# set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'


##############
### DESIGN ###
##############

# bg = background
# fg = foreground

# panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=red

## Status bar design
# status line
set -g status-justify left
set -g status-bg default
set -g status-style fg=blue
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

# window mode
setw -g mode-style bg=green,fg=black

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=white] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=white] #I #[fg=white]#[bg=cyan] #W "
setw -g window-status-current-style bg=black,fg=yellow,dim
setw -g window-status-style bg=green,fg=black,reverse

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off

set-window-option -g monitor-activity off
set -g bell-action none

# The modes
set-window-option -g clock-mode-colour red
set-window-option -g mode-style fg=red,bg=black,bold

# The panes
set -g pane-border-style bg=black,fg=black
set -g pane-active-border-style fg=blue,bg=brightblack

# The statusbar
set -g status-position bottom
set -g status-style bg=black,fg=yellow,dim
set -g status-left ''
set -g status-right '#{?client_prefix,#[fg=red]prefix pressed ..,#[fg=brightwhite]#H}'
# set -g status-right '#{?client_prefix,#[fg=white]#[bg=red]#[bold] - PREFIX - ,#[fg=brightwhite]#H}'

set -g status-right-length 50
set -g status-left-length 20

# The window
set-window-option -g window-status-current-style fg=red,bg=black,bold
set-window-option -g window-status-current-format ' #I#[fg=brightwhite]:#[fg=brightwhite]#W#[fg=blue]#F '

set-window-option -g window-status-style fg=magenta,bg=black,none
set-window-option -g window-status-format ' #I#[fg=colour251]:#[fg=colour251k]#W#[fg=black]#F '

set-window-option -g window-status-bell-style fg=white,bg=red,bold

# The messages
set -g message-style fg=white,bg=red,bold

###############
### PLUGINS ###
###############

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'egel/tmux-gruvbox'
set -g @tmux-gruvbox 'dark' # or 'light'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b "$(brew --prefix)/opt/tpm/share/tpm/tpm"
